openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Bands REST API"
servers:
  - url: "{server}"
    variables:
      server:
        default: "https://api.example.com"
paths:
  "/v1/bands":
    get:
      summary: "Retrieve Bands"
      description: "Retrieve Bands."
      operationId: "retrieveBands"
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BandArray"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Create Band"
      description: "Create Band."
      operationId: "createBand"
      requestBody:
        description: "Band creations params."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPostBand"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/bands/{band_id}":
    delete:
      summary: "Delete Band"
      description: "Delete Band."
      operationId: "deleteBand"
      parameters:
        - in: path
          name: "band_id"
          description: "Band identifier."
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Ok
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: "Update Band"
      description: "Update Band."
      operationId: "updateBand"
      parameters:
        - in: path
          name: "band_id"
          description: "Band identifier."
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: "Band update params."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPatchBand"
      responses:
        "200":
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/bands/{band_id}/members":
    post:
      summary: "Create Band Member"
      description: "Create Band Member."
      operationId: "createBandMember"
      parameters:
        - in: path
          name: "band_id"
          description: "Band identifier."
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: "Band Member creations params."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPostBandMember"
      responses:
        "200":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/bands/{band_id}/members/{member_id}":
    delete:
      summary: "Delete Band Member"
      description: "Delete Band Member."
      operationId: "deleteBandMember"
      parameters:
        - in: path
          name: "band_id"
          description: "Band identifier."
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: "member_id"
          description: "Band member identifier."
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:

    Band:
      description: "Band"
      type: object
      properties:
        id:
          description: "Band id"
          type: string
          format: uuid
        name:
          description: "Band name"
          type: string
        creation:
          description: "Band date creation"
          type: string
          format: date
        members:
          $ref: "#/components/schemas/MemberArray"
        status:
          type: string
          enum:
            - "BREAK_UP"
            - "HIATUS"
            - "ON_THE_ROAD"
        created_at:
          description: "Entry date creation"
          type: string
          format: date
        updated_at:
          description: "Entry date update"
          type: string
          format: date
      additionalProperties: false

    BandArray:
      description: "Band list"
      type: array
      items:
        $ref: "#/components/schemas/Band"

    Error:
      description: "Error"
      type: object
      properties:
        httpCode:
          description: "HTTP Code. ex:  400, 401, 404."
          type: integer
        httpMessage:
          description: "HTTP Status Message. ex: Bad Request, Unauthorized, Not Found."
          type: string
        description:
          description: "Error description."
          type: string
        parametrosInvalidos:
          $ref: "#/components/schemas/InvalidParameterArray"

    InvalidParameter:
      description: "Invalid Parameter"
      type: object
      properties:
        nome:
          description: "Parameter name"
          type: string
        descricao:
          description: "Parameter description"
          type: string

    InvalidParameterArray:
      description: "Invalid parameter list"
      type: array
      items:
        $ref: "#/components/schemas/InvalidParameter"

    Member:
      description: "Band Member"
      type: object
      properties:
        id:
          description: "Member id"
          type: string
          format: uuid
        name:
          description: "Member name"
          type: string
      additionalProperties: false

    MemberArray:
      description: "Member list"
      type: array
      items:
        $ref: "#/components/schemas/Member"

    PatchDocument:
      description: "A JSONPatch document as defined by RFC 6902"
      type: object
      required:
        - "op"
        - "path"
      properties:
        op:
          type: string
          description: "The operation to be performed"
          enum:
            - "add"
            - "remove"
            - "replace"
            - "move"
            - "copy"
            - "test"
        path:
          type: string
          description: "A JSON-Pointer"
        value:
          type: object
          description: "The value to be used within the operations."
        from:
          type: string
          description: "A string containing a JSON Pointer value."
      additionalProperties: false

    RequestPatchBand:
      description: "Request Patch Band"
      type: array
      items:
        $ref: "#/components/schemas/PatchDocument"
      additionalProperties: false

    RequestPostBand:
      description: "Request Post Band"
      type: object
      required:
        - "creation"
        - "name"
        - "status"
      properties:
        name:
          description: "Band name"
          type: string
        creation:
          description: "Band date creation"
          type: string
          format: date
        status:
          type: string
          enum:
            - "BREAK_UP"
            - "HIATUS"
            - "ON_THE_ROAD"
      additionalProperties: false

    RequestPostBandMember:
      description: "Request Post Band Member"
      type: object
      required:
        - "name"
      properties:
        name:
          description: "Member name"
          type: string
      additionalProperties: false